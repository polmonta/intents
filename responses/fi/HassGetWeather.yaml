language: fi
responses:
  intents:
    HassGetWeather:
      default: >
        {% set weather_condition = {
          'Selkeä': 'ja kirkasta',
          'Yö, selkeää': 'ja kirkasta',
          'Pilvistä': 'ja pilvistä',
          'Poikkeuksellinen': 'ja poikkeukselliset sääolosuhteet',
          'Sumuista': 'ja sumuista',
          'Raekuuroja': 'ja raekuuroja',
          'Ukkoskuuroja': 'ja ukkosta',
          'Ukkosvaara, sateista': 'ja ukkosmyrsky',
          'Puolipilvistä': 'ja puolipilvistä',
          'Kaatosadetta': 'ja kaatosade',
          'Vesisadetta': 'ja sataa vettä',
          'Lumisadetta': 'ja sataa lunta',
          'Räntäsadetta': 'ja sataa räntää',
          'Aurinkoista': 'ja aurinkoista',
          'Tuulista': 'ja tuulista',
          'Tuulista, pilvistä': 'ja tuulista ja pilvistä'
        } %}
        {% set temperature = state.attributes.get('temperature') | int %}
        {% if temperature < 0 %}
          {% set temperature_string = 'miinus ' ~ (temperature * -1) | string | replace('.', ',') %}
        {% else %}
          {% set temperature_string = temperature | string | replace('.', ',') %}
        {% endif %}


        {% set yksikkö = state.attributes.get('temperature_unit') | string  %}
          {% if yksikkö == "°C" %}
            {% set yksikkö = "astetta" %}
          {% else %}
            {% set yksikkö = "faaren haittia" %}
          {%- endif %}
        {{ temperature_string }} {{ yksikkö }} {{ weather_condition.get(state.state, state.state | string) }}

      #{{ temperature_string }} {{ state.attributes.get('temperature_unit') }} {{ weather_condition.get(state.state, state.state | string) }}
