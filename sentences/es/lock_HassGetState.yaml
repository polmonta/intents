language: es
intents:
  HassGetState:
    data:
      - sentences:
          - "está[n] <name> {lock_states:state}[ <area>]"
          - "está[n] {lock_states:state} <name>[ <area>]"
        response: one_yesno
        requires_context:
          domain: lock
        slots:
          domain: lock

      - sentences:
          - "(está[n]|hay) alg(ún|uno|una)[s] <cerrables> {lock_states:state}[ <area>]"
          - "(está[n]|hay) {lock_states:state} alg(ún|uno|una)[s] <cerrables>[ <area>]"
        response: any
        slots:
          domain: lock

      - sentences:
          - "están tod(o|a)s <cerrables> {lock_states:state}[ <area>]"
          - "están {lock_states:state} tod(o|a)s <cerrables>[ <area>]"
          - "están todas l(o|a)s <cerrables> {lock_states:state} [con] (cierre|pestillo|cerrojo|cerradura|llave)[ <area>]"
          - "están {lock_states:state} [con] (cierre|pestillo|cerrojo|cerradura|llave) tod(o|a)s <cerrables>[ <area>]"
        response: all
        slots:
          domain: lock

      - sentences:
          - "(qué|cual[es]) <cerrables> (está[n]|hay) {lock_states:state}[ <area>]"
          - "(qué|cual[es]) <cerrables> (está[n]|hay) {lock_states:state} [con] (cierre|pestillo|cerrojo|cerradura|llave)[ <area>]"
        response: which
        slots:
          domain: lock

      - sentences:
          - "cuánt(o|a)s <cerrables> (están|hay) {lock_states:state}[ <area>]"
          - "cuánt(o|a)s <cerrables> (están|hay) {lock_states:state} [con] (cierre|pestillo|cerrojo|cerradura|llave)[ <area>]"
        response: how_many
        slots:
          domain: lock
